apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    app: {{ .Values.app.name }}
  annotations:
    deployment.kubernetes.io/revision:  "1"
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
{{- if .Values.configMap }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMap }}
{{- end }}
{{- if .Values.secret }}
      {{- if .Values.configMap }}
            - secretRef:
                name: {{ .Values.secret }}
      {{- else }}
          envFrom:
            - secretRef:
                name: {{ .Values.secret }}
      {{- end }}
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.app.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.app.healthCheckURI }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.app.healthCheckURI }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
